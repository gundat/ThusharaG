In powershell:

docker run --name raster_tutorial -itp8889:8889 geohackweek2016/rastertutorial /bin/bash
ls
jupyter notebook --notebook-dir=/notebooks --ip='*' --port=8889 --no-browser
in web browser --> http://localhost:8889
docker run --name raster_t2 -itp8889:8889 geohackweek2016/rastertutorial /bin/bash

gdalinfo --formats
gdalinfo /data/landcover.tif
docker stop $(docker ps -aq)
docker rm $(docker ps -aq)

to rename container:
docker rename [container id] [new name] --OR--
docker rename [old container name] [new name]

if new name is "raster_con", then to reopen container once it's created:
docker start -ai raster_con

ctrl+c --> way to get back to command prompt after executing jupyter notebook

vector tutorial: within container, have to "source activate vectorenv" and then execute jupyter notebook
used localhost 8890 for vector container

for GEE's docker:
docker run -d -p 8888:8888 --name docker_cont geohackweek2016/docker-ee-datascience-notebook
it spits out some 40 characters jibberish, that's your confirmation
open web-browser and navigate to localhost:8888
the "-d" run in the "daemon mode" i.e., in the background
the "-p" still opens the port; the first set of #s can be a different port if 8888 is already used; 
the second set of 4 #s has to be 8888 b/c that's what the image is continuing on

open terminal within jupyter notebook to figure out what files are in the container: "ls"
then "cd data" and "ls" to figure out 


